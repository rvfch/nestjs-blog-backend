services:
  redis-server:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - cache:/data

  db:
    image: 'bitnami/postgresql'
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=blog
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - redis-server
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3004:3004'

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    env_file:
      - ./apps/gateway/.env
    environment:
      - GATEWAY_URL=http://gateway:8080
      - AUTH_SERVICE_URL=http://auth:3004
      - TENANT_SERVICE_URL=http://tenant:3100
      - BLOG_SERVICE_URL=http://blog:3001
      - FILE_MANAGER_URL=http://file-manager:2999
      - USERS_SERVICE_URL=http://users:3003
    depends_on:
      - redis-server
      - db
      - auth
      - tenant
      - blog
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '8080:8080'

  blog:
    build:
      context: .
      dockerfile: ./apps/blog/Dockerfile
      target: development
    command: npm run start:dev blog
    env_file:
      - ./apps/blog/.env
    depends_on:
      - db
      - redis-server
      - tenant
      - users
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'

  file-manager:
    build:
      context: .
      dockerfile: ./apps/file-manager/Dockerfile
      target: development
    command: npm run start:dev file-manager
    env_file:
      - ./apps/file-manager/.env
    depends_on:
      - redis-server
      - db
    volumes:
      - .:/usr/src/app
      - /node_modules
      - ./public/images:/usr/src/app/public/images
    ports:
      - '2999:2999'

  users:
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: npm run start:dev users
    env_file:
      - ./apps/users/.env
    depends_on:
      - redis-server
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3003:3003'

  tenant:
    build:
      context: .
      dockerfile: ./apps/tenant/Dockerfile
      target: development
    command: npm run start:dev tenant
    env_file:
      - ./apps/tenant/.env
    depends_on:
      - redis-server
      - db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3100:3100'

volumes:
  cache: {}
  db:
    driver: local
